*deoplete.txt*	Dark powered asynchronous completion framework for neovim.

Version: 0.0
Author: Shougo <Shougo.Matsu at gmail.com>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS					*deoplete-contents*

Introduction		|deoplete-introduction|
Install			|deoplete-install|
Interface		|deoplete-interface|
  Commands		  |deoplete-commands|
  Variables		  |deoplete-variables|
  Key mappings		  |deoplete-key-mappings|
  Functions		  |deoplete-functions|
Examples		|deoplete-examples|
Sources			|deoplete-sources|
Create source		|deoplete-create-source|
Create filter		|deoplete-create-filter|
FILTERS			|deoplete-filters|
External sources	|deoplete-external-sources|
FAQ			|deoplete-faq|

==============================================================================
INTRODUCTION					*deoplete-introduction*

*deoplete* is the abbreviation of "dark powered neo-completion".  It
provides asynchronous keyword completion system in the
current buffer.  Deoplete cannot be customized and has not many
features currently.  It is provided for testing purpose.

Note: deoplete may consume more memory than other plugins do.

Improvements in deoplete in comparison to |neocomplete|:

1. Real asynchronous completion behavior like |YouCompleteMe| by default.
2. Uses Python3 to implement sources.
3. Removes legacy interface.
4. Requires |if_python3|.

==============================================================================
INSTALL						*deoplete-install*

Note: deoplete requires Neovim(latest is recommended) with Python3 enabled.

1. Extract the files and put them in your Neovim directory
   (usually `~/.nvim/`).
2. Execute the `:UpdateRemotePlugins` and restart Neovim.
3. Execute the `:DeopleteEnable` command or
   set "let g:deoplete#enable_at_startup = 1" in your `.nvimrc`

If ":echo has('python3')" returns `1`, then you're done; otherwise, see below.

You can enable Python3 interface with pip: >

    sudo pip3 install neovim

If you want to read for Neovim-python/python3 interface install documentation,
you should read |nvim-python|.

						*deoplete-context-filetype*

If you like to use the context filetype feature, you need to install the
context_filetype.vim plugin which you can find under the following repository:
https://github.com/Shougo/context_filetype.vim

==============================================================================
INTERFACE					*deoplete-interface*

------------------------------------------------------------------------------
COMMANDS 					*deoplete-commands*

:DeopleteEnable				*:DeopleteEnable*
		Validate deoplete and initialize it.

:DeopleteMessages			*:DeopleteMessages*
		Edit deoplete error messages file.

------------------------------------------------------------------------------
VARIABLES 					*deoplete-variables*

				*g:deoplete#enable_at_startup*
g:deoplete#enable_at_startup
		Deoplete gets started automatically when Neovim starts if
		this value is 1.

		With the default value 0, you cannot use deoplete
		unless you start it manually.

				*g:deoplete#enable_ignore_case*
g:deoplete#enable_ignore_case
		When deoplete looks for candidate completion, this
		variable controls whether deoplete ignores the upper-
		and lowercase.  If it is 1, deoplete ignores case.

		Default value is 'ignorecase'.

				*g:deoplete#enable_smart_case*
g:deoplete#enable_smart_case
		When a capital letter is included in input, deoplete does
		not ignore the upper- and lowercase.

		Default value is 'infercase'.

				*g:deoplete#auto_completion_start_length*
g:deoplete#auto_completion_start_length
		This variable controls the number of the input completion
		at the time of key input automatically.

		Default value is 2.

				*g:deoplete#disable_auto_complete*
g:deoplete#disable_auto_complete
		It controls whether you invalidate automatic completion.  If
		it is 1, automatic completion becomes invalid, but can use the
		manual completion by |deoplete#mappings#manual_complete()|.

		Default value is 0.

				*b:deoplete_disable_auto_complete*
b:deoplete_disable_auto_complete
		Buffer local variable of |g:deoplete#disable_auto_complete|.

				*g:deoplete#keyword_patterns*
g:deoplete#keyword_patterns
		This dictionary records keyword patterns to buffer completion.
		This is appointed in regular expression string or list every
		file type.
		Note: It is Python3 regexp.
>
		let g:deoplete#keyword_patterns = {}
		let g:deoplete#keyword_patterns.tex = '\\?[a-zA-Z_]\w*'
<
		Default value is in g:deoplete#_keyword_patterns.

				*b:deoplete_keyword_patterns*
b:deoplete_keyword_patterns
		Buffer local variable of |g:deoplete#keyword_patterns|.

				*g:deoplete#omni_patterns*
g:deoplete#omni_patterns
		This dictionary records keyword patterns to Omni completion.
		This is appointed in regular expression string or list every
		file type.
		If this pattern is not defined or empty pattern, deoplete
		does not call 'omnifunc'.
		Note: If it is a set, deoplete will call 'omnifunc'
		directly.  So almost deoplete features are disabled.
		Note: It is Python3 regexp.
>
		let g:deoplete#omni_patterns = {}
		let g:deoplete#omni_patterns.ruby =
		\ ['[^. *\t]\.\w*', '\h\w*::']
		let g:deoplete#omni_patterns.java = '[^. *\t]\.\w*'
<
		Default value is in g:deoplete#_omni_patterns.

				*b:deoplete_omni_patterns*
b:deoplete_omni_patterns
		Buffer local variable of |g:deoplete#omni_patterns|.

g:deoplete#sources		*g:deoplete#sources*
		It is a dictionary to decide use source names.  The key is
		filetype and the value is source names list.  If the key is
		"_", the value will be used for default filetypes.  For
		example, you can load some sources in C++ filetype.
		If the value is [], it will load all sources.
		Default value is {}.
>
		" Examples:
		let g:deoplete#sources = {}
		let g:deoplete#sources._ = ['buffer']
		let g:deoplete#sources.cpp = ['buffer', 'tag']
<
b:deoplete_sources		*b:deoplete_sources*
		Buffer local variable of |g:deoplete#sources|.
>
		" Examples:
		" In cmdwin, only use buffer source.
		autocmd CmdwinEnter * let b:deoplete_sources = ['buffer']
<
g:deoplete#ignore_sources	*g:deoplete#ignore_sources*
		It is a dictionary to decide ignore source names.
		Default value is {}.

b:deoplete_ignore_sources	*b:deoplete_ignore_sources*
		Buffer local variable of |g:deoplete#ignore_sources|.

------------------------------------------------------------------------------
FUNCTIONS 					*deoplete-functions*

deoplete#initialize()			*deoplete#initialize()*
		Initialize deoplete and sources.
		Note: It enables deoplete.
		Note: You should call it in |VimEnter| autocmd.
		User customization for deoplete must be set before
		initialization of deoplete.

------------------------------------------------------------------------------
KEY MAPPINGS 					*deoplete-key-mappings*

				*deoplete#mappings#start_manual_complete()*
deoplete#mappings#manual_complete([{sources}])
		Use this function on inoremap <expr>.  The keymapping call the
		completion of deoplete.  When you rearrange the completion
		of the Vim standard, you use it.
		If you give {sources} argument, deoplete will call {sources}.
		{sources} is name of source or list of sources name.
>
		inoremap <expr><Tab>  deoplete#mappings#manual_complete()
<
deoplete#mappings#close_popup()
		Insert candidate and close popup menu for deoplete.
>
		inoremap <expr><C-y>  deoplete#mappings#close_popup()
<
				*deoplete#mappings#cancel_popup()*
deoplete#mappings#cancel_popup()
		Cancel completion menu for deoplete.
>
		inoremap <expr><C-e>  deoplete#mappings#cancel_popup()
<
				*deoplete#mappings#smart_close_popup()*
deoplete#mappings#smart_close_popup()
		Insert candidate and re-generate popup menu for deoplete.
>
		inoremap <expr><C-h>
		\ deolete#mappings#smart_close_popup()."\<C-h>"
		inoremap <expr><BS>
		\ deoplete#mappings#smart_close_popup()."\<C-h>"
<
		Note: This mapping is conflicted with |SuperTab| or |endwise|
		plugins.
		Note: This key mapping is for <C-h> or <BS> keymappings.
		You should not use it for <CR>.

==============================================================================
EXAMPLES					*deoplete-examples*
>
	" Use deoplete.
	let g:deoplete#enable_at_startup = 1
	" Use smartcase.
	let g:deoplete#enable_smart_case = 1

	inoremap <expr><C-y>  deoplete#mappings#close_popup()
	inoremap <expr><C-e>  deoplete#mappings#cancel_popup()

	" <C-h>, <BS>: close popup and delete backword char.
	inoremap <expr><C-h> deolete#mappings#smart_close_popup()."\<C-h>"
	inoremap <expr><BS> deoplete#mappings#smart_close_popup()."\<C-h>"
<
==============================================================================
SOURCES						*deoplete-sources*

buffer						*deoplete-source-buffer*
		It collects keywords from current buffer and the buffers which
		have same 'filetype'.

tag						*deoplete-source-tag*
		It collects keywords from |ctags| files.
		Note: It only supports UTF-8 encoding tag file.

file						*deoplete-source-file*
		This source collects keywords from local files.

------------------------------------------------------------------------------
USER SOURCES 					*deoplete-user-sources*

==============================================================================
FILTERS						*deoplete-filters*

==============================================================================
CREATE SOURCE					*deoplete-create-source*

==============================================================================
CREATE FILTER					*deoplete-create-filter*

==============================================================================
EXTERNAL SOURCES				*deoplete-external-sources*

==============================================================================
FAQ						*deoplete-faq*

Q: deoplete deos not work.

A: Please enable debug mode from command line. >

	$ export NVIM_PYTHON_LOG_FILE=/tmp/log
	$ export NVIM_PYTHON_LOG_LEVEL=DEBUG
	$ neovim
	... Use deoplete
	$ cat /tmp/log_{PID}

And please upload the log file.

Q: I want to get quiet messages in auto completion.

A: You can disable the messages through the 'shortmess' option.
>
	if has("patch-7.4.314")
	  set shortmess+=c
	endif
<
Q: I want to look selected function's arguments in deoplete. But I don't
like preview window feature.

A: You can do it by |echodoc|.
http://github.com/Shougo/echodoc.vim

Q: I want to use auto select feature like |neocomplete|.

A: You can use it by the 'completeopt' option. >

	set completeopt+=noinsert

Q: I want to lock auto completion.

A: Please use |b:deoplete_disable_auto_complete|.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
